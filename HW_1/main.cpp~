#include <iostream>

using namespace std;

int rollDice();
void comeoutRoll(int& playerChoice, int& playerBet, int& playerBal);
void pointPhase();
void setupPhase(int playerBal);
void betMenu1();
void betMenu2();
void betTracker(int betType, int&playerBal, int& playerBet);
  
int main(){
  int playerBal = 500;
  int minBet = 10;
  int maxBet = 200;
  int playerBet;
  int playerChoice;
  
  for(playerBal > 10 && playerChoice != 4){
    setupPhase(playerBal);
    comeoutRoll(platerBet, playerBal);
    if(playerChoice == 4){
      cout << "Quitting Addiction" << endl;
      return;
    }
  }
}

int rollDice(){
    srand((unsigned) time(NULL));
    int dice = 2 + (rand()%11);
    return dice;
}

void comeoutRoll(int& playerChoice, int& playerBet, int& playerBal){
  betMenu1();
  bool continue = 0;
  for(continue == 0){
    cout << "Your Choice? ";
    cin >> playerChoice;
    if(playerChoice == 1){
      betTracker(1, playerBal, playerBet);
    }
    else if(playerChoice == 2){
      betTracker(2, playerBal, playerBet);
    }
    else if(playerChoice == 3){
      rollDice();
      continue == 1;
    }
    else if(playerChoice == 4){
      return;
    }
    else{
      cout << "Invalid Entry" << endl;
    }
  }
}

void pointPhase(){
    int playerInput = 0;
    cout << "Make your choice:\n1. Come Line Bet\n2. Don't Come Line Bet\n3. Roll the Dice\n4. Quit\n";
    cin >> playerInput;
}

void setupPhase(int playerBal){


  cout << "Chips Balance: " << playerBal << endl;
}

void betMenu1(){
  cout << "Bet Menu" << endl;
  cout << "Bet Pass line" << endl;
  cout << "Don't Pass Line Bet" << endl;
  cout << "Roll the Dice" << endl;
}

void betMenu2(){
  cout << "Bet Menu" << endl;
  cout << "Come Line Bet" << endl;
  cout << "Don't Come Line Bet" << endl;
  cout << "Roll the Dice" << endl;
}

void betTracker(int betType, int&playerBal, int& playerBet){
  cout << 
}
